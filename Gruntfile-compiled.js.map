{"version":3,"sources":["Gruntfile.js"],"names":[],"mappings":"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","file":"Gruntfile-compiled.js","sourcesContent":["// Generated on 2015-07-27 using generator-react 0.0.2\n'use strict';\n\n// # Globbing\n// for performance reasons we're only matching one level down:\n// 'test/spec/{,*/}*.js'\n// use this if you want to recursively match all subfolders:\n// 'test/spec/**/*.js'\n\nmodule.exports = function (grunt) {\n\n    // Load grunt tasks automatically\n    require('load-grunt-tasks')(grunt);\n\n    // Time how long tasks take. Can help when optimizing build times\n    require('time-grunt')(grunt);\n\n    // Define the configuration for all the tasks\n    grunt.initConfig({\n\n        // Project settings\n        yeoman: {\n            // Configurable paths\n            app: 'app',\n            dist: 'dist'\n        },\n\n        // react\n        react: {\n            app: {\n                options: {\n                    extension:    'scripts',  // Default\n                    ignoreMTime:  false // Default\n                },\n                files: {\n                    '<%= yeoman.app %>/scripts': '<%= yeoman.app %>/scripts'\n                }\n            },\n        },\n\n        // Watches files for changes and runs tasks based on the changed files\n        watch: {\n            gruntfile: {\n                files: ['Gruntfile.js']\n            },\n            react: {\n                files: ['<%= yeoman.app %>/scripts/{,*/}*.scripts'],\n                tasks: ['react:app']\n            },\n            styles: {\n                files: ['<%= yeoman.app %>/styles/{,*/}*.css'],\n                tasks: ['newer:copy:styles', 'autoprefixer']\n            },\n            livereload: {\n                options: {\n                    livereload: '<%= connect.options.livereload %>'\n                },\n                files: [\n                    '<%= yeoman.app %>/*.html',\n                    '.tmp/styles/{,*/}*.css',\n                    '{.tmp,<%= yeoman.app %>}/scripts/{,*/}*.js',\n                    '<%= yeoman.app %>/images/{,*/}*.{gif,jpeg,jpg,png,svg,webp}'\n                ]\n            }\n        },\n\n        // The actual grunt server settings\n        connect: {\n            options: {\n                port: 9000,\n                livereload: 35729,\n                // Change this to '0.0.0.0' to access the server from outside\n                hostname: 'localhost'\n            },\n            livereload: {\n                options: {\n                    open: true,\n                    base: [\n                        '.tmp',\n                        '<%= yeoman.app %>'\n                    ]\n                }\n            },\n            test: {\n                options: {\n                    base: [\n                        '.tmp',\n                        'test',\n                        '<%= yeoman.app %>'\n                    ]\n                }\n            },\n            dist: {\n                options: {\n                    open: true,\n                    base: '<%= yeoman.dist %>',\n                    livereload: false\n                }\n            }\n        },\n\n        // Empties folders to start fresh\n        clean: {\n            dist: {\n                files: [{\n                    dot: true,\n                    src: [\n                        '.tmp',\n                        '<%= yeoman.dist %>/*',\n                        '!<%= yeoman.dist %>/.git*'\n                    ]\n                }]\n            },\n            server: '.tmp'\n        },\n\n        // Make sure code styles are up to par and there are no obvious mistakes\n        jshint: {\n            options: {\n                jshintrc: '.jshintrc',\n                reporter: require('jshint-stylish')\n            },\n            all: [\n                'Gruntfile.js',\n                '<%= yeoman.app %>/scripts/{,*/}*.js',\n                '!<%= yeoman.app %>/scripts/vendor/*',\n                'test/spec/{,*/}*.js'\n            ]\n        },\n\n\n        // Mocha testing framework configuration options\n        mocha: {\n            all: {\n                options: {\n                    run: true,\n                    urls: ['http://<%= connect.test.options.hostname %>:<%= connect.test.options.port %>/index.html']\n                }\n            }\n        },\n\n\n\n        // Add vendor prefixed styles\n        autoprefixer: {\n            options: {\n                browsers: ['last 1 version']\n            },\n            dist: {\n                files: [{\n                    expand: true,\n                    cwd: '.tmp/styles/',\n                    src: '{,*/}*.css',\n                    dest: '.tmp/styles/'\n                }]\n            }\n        },\n\n        // Automatically inject Bower components into the HTML file\n        'bower-install': {\n            app: {\n                html: '<%= yeoman.app %>/index.html',\n                ignorePath: '<%= yeoman.app %>/'\n            }\n        },\n\n        // Renames files for browser caching purposes\n        rev: {\n            dist: {\n                files: {\n                    src: [\n                        '<%= yeoman.dist %>/scripts/{,*/}*.js',\n                        '<%= yeoman.dist %>/styles/{,*/}*.css',\n                        '<%= yeoman.dist %>/images/{,*/}*.{gif,jpeg,jpg,png,webp}',\n                        '<%= yeoman.dist %>/styles/fonts/{,*/}*.*'\n                    ]\n                }\n            }\n        },\n\n        // Reads HTML for usemin blocks to enable smart builds that automatically\n        // concat, minify and revision files. Creates configurations in memory so\n        // additional tasks can operate on them\n        useminPrepare: {\n            options: {\n                dest: '<%= yeoman.dist %>'\n            },\n            html: '<%= yeoman.app %>/index.html'\n        },\n\n        // Performs rewrites based on rev and the useminPrepare configuration\n        usemin: {\n            options: {\n                assetsDirs: ['<%= yeoman.dist %>']\n            },\n            html: ['<%= yeoman.dist %>/{,*/}*.html'],\n            css: ['<%= yeoman.dist %>/styles/{,*/}*.css']\n        },\n\n        // The following *-min tasks produce minified files in the dist folder\n        imagemin: {\n            dist: {\n                files: [{\n                    expand: true,\n                    cwd: '<%= yeoman.app %>/images',\n                    src: '{,*/}*.{gif,jpeg,jpg,png}',\n                    dest: '<%= yeoman.dist %>/images'\n                }]\n            }\n        },\n        svgmin: {\n            dist: {\n                files: [{\n                    expand: true,\n                    cwd: '<%= yeoman.app %>/images',\n                    src: '{,*/}*.svg',\n                    dest: '<%= yeoman.dist %>/images'\n                }]\n            }\n        },\n        htmlmin: {\n            dist: {\n                options: {\n                    // removeCommentsFromCDATA: true,\n                    // collapseWhitespace: true,\n                    // collapseBooleanAttributes: true,\n                    // removeAttributeQuotes: true,\n                    // removeRedundantAttributes: true,\n                    // useShortDoctype: true,\n                    // removeEmptyAttributes: true,\n                    // removeOptionalTags: true\n                },\n                files: [{\n                    expand: true,\n                    cwd: '<%= yeoman.app %>',\n                    src: '*.html',\n                    dest: '<%= yeoman.dist %>'\n                }]\n            }\n        },\n\n        // By default, your `index.html`'s <!-- Usemin block --> will take care of\n        // minification. These next options are pre-configured if you do not wish\n        // to use the Usemin blocks.\n        // cssmin: {\n        //     dist: {\n        //         files: {\n        //             '<%= yeoman.dist %>/styles/main.css': [\n        //                 '.tmp/styles/{,*/}*.css',\n        //                 '<%= yeoman.app %>/styles/{,*/}*.css'\n        //             ]\n        //         }\n        //     }\n        // },\n        // uglify: {\n        //     dist: {\n        //         files: {\n        //             '<%= yeoman.dist %>/scripts/scripts.js': [\n        //                 '<%= yeoman.dist %>/scripts/scripts.js'\n        //             ]\n        //         }\n        //     }\n        // },\n        // concat: {\n        //     dist: {}\n        // },\n\n        // Copies remaining files to places other tasks can use\n        copy: {\n            dist: {\n                files: [{\n                    expand: true,\n                    dot: true,\n                    cwd: '<%= yeoman.app %>',\n                    dest: '<%= yeoman.dist %>',\n                    src: [\n                        '*.{ico,png,txt}',\n                        '.htaccess',\n                        'images/{,*/}*.webp',\n                        'styles/fonts/{,*/}*.*'\n                    ]\n                }]\n            },\n            styles: {\n                expand: true,\n                dot: true,\n                cwd: '<%= yeoman.app %>/styles',\n                dest: '.tmp/styles/',\n                src: '{,*/}*.css'\n            }\n        },\n\n\n\n        // Run some tasks in parallel to speed up build process\n        concurrent: {\n            server: [\n                'copy:styles'\n            ],\n            test: [\n                'copy:styles'\n            ],\n            dist: [\n                'copy:styles',\n                'react:app',\n                'imagemin',\n                'svgmin',\n                'htmlmin'\n            ]\n        }\n    });\n\n\n    grunt.registerTask('serve', function (target) {\n        if (target === 'dist') {\n            return grunt.task.run(['build', 'connect:dist:keepalive']);\n        }\n\n        grunt.task.run([\n            'clean:server',\n            'react',\n            'concurrent:server',\n            'autoprefixer',\n            'connect:livereload',\n            'watch'\n        ]);\n    });\n\n    grunt.registerTask('test', [\n        'clean:server',\n        'react',\n        'concurrent:test',\n        'autoprefixer',\n        'connect:test',\n        'mocha'\n    ]);\n\n    grunt.registerTask('build', [\n        'clean:dist',\n        'react',\n        'useminPrepare',\n        'concurrent:dist',\n        'autoprefixer',\n        'concat',\n        'cssmin',\n        'uglify',\n        'copy:dist',\n        'rev',\n        'usemin'\n    ]);\n\n    grunt.registerTask('default', [\n        'newer:jshint',\n        'test',\n        'build'\n    ]);\n};\n"]}