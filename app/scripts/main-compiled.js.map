{"version":3,"sources":["main.js"],"names":[],"mappings":"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","file":"main-compiled.js","sourcesContent":["var Banner = React.createClass({\n  render: function() {\n    return (\n        <div id=\"Banner\">\n          <img src=\"img/Banner.png\" />\n        </div>\n    );\n  }\n});\n\nvar QuestionPanel = React.createClass({\n\n  handleCheckboxClick: function(clickedOptionTag, event) {\n\n    // Guard against multiple clicks\n    if (!nkoreaTest.checkboxActive) { return }\n    nkoreaTest.checkboxActive = false;\n\n    nkoreaTest.Card.state.chosenOptionTag = clickedOptionTag;\n\n    // All questions answered: display total score\n    if (nkoreaTest.Card.state.questionSerial >= nkoreaTest.survey.length - 1) {\n      React.render(\n          <ScorePage />,\n          document.getElementById('content')\n      );\n    }\n\n    //Show the answer\n    nkoreaTest.Card.setState({showAnswer: true});\n\n    if (clickedOptionTag === this.props.data.correctOptionTag) {\n      nkoreaTest.totalScore += nkoreaTest.scorePerQuestion;\n    }\n\n  },\n\n  getCorrectnessSign: function(optionTag) {\n      // Only show correctness sign after the chosen option\n      if (optionTag !== nkoreaTest.Card.state.chosenOptionTag) { return '' }\n      var correctOption = nkoreaTest.survey[nkoreaTest.Card.state.questionSerial].correctOptionTag;\n      var sign, colour, i;\n      if (nkoreaTest.Card.state.chosenOptionTag === null) {\n          sign = '';\n      } else if (nkoreaTest.Card.state.chosenOptionTag === correctOption) {\n          sign = '✓';\n      } else {\n          sign = '✕';\n      }\n\n      //Set color\n      var correctnessSignDOMNodes = document.getElementsByClassName('CorrectnessSign');\n      if (sign === '✓') {\n          for (i=0; i<correctnessSignDOMNodes.length; i+=1) {\n              correctnessSignDOMNodes[i].className = 'CorrectnessSign CorrectnessSign-correct'\n          }\n      } else if (sign === '✕') {\n          for (i=0; i<correctnessSignDOMNodes.length; i+=1) {\n              correctnessSignDOMNodes[i].className = 'CorrectnessSign CorrectnessSign-wrong'\n          }\n      }\n      return sign;\n  },\n\n  render: function() {\n\n    if (nkoreaTest.Card.state.answerSerial >= nkoreaTest.survey.length) {\n      return;\n      // TODO\n    }\n\n    var optionBoxes;\n    if (this.props.data.optionContainsImage) {\n      // TODO: special layout for imaged stuff\n        optionBoxes = this.props.data.options.map(function (option) {\n            return (\n                <div className=\"optionBox\" key={option.optionTag}>\n                    <label>\n                        <input type=\"checkbox\"\n                               name={option.optionTag}\n                               onChange={this.handleCheckboxClick.bind(this, option.optionTag)}\n                               className=\"checkbox\"\n                            />\n                        <span className=\"optionTag\">{option.optionTag}</span>\n                        <span className=\"optionText\">{option.optionText}</span>\n                        <span className=\"CorrectnessSign\">{this.getCorrectnessSign(option.optionTag)}</span>\n                    </label>\n                </div>\n            )\n        }, this);\n    } else {\n        optionBoxes = this.props.data.options.map(function (option) {\n            return (\n                <div className=\"optionBox\" key={option.optionTag}>\n                    <label>\n                        <input type=\"checkbox\"\n                               name={option.optionTag}\n                               onChange={this.handleCheckboxClick.bind(this, option.optionTag)}\n                               className=\"checkbox\"\n                            />\n                        <span className=\"optionTag\">{option.optionTag}</span>\n                        <span className=\"optionText\">{option.optionText}</span>\n                        <span className=\"CorrectnessSign\">{this.getCorrectnessSign(option.optionTag)}</span>\n                    </label>\n                </div>\n            )\n        }, this);\n    }\n\n    return (\n        <div id=\"QuestionPanel\" data={this.props.data}>\n          <div id=\"questionTag\">\n            {this.props.data.questionTag}\n          </div>\n          <div id=\"questionText\">\n            {this.props.data.questionText}\n          </div>\n          <div id=\"OptionPanel\">\n            {optionBoxes}\n          </div>\n        </div>\n    );\n  }\n});\n\nvar AnswerPanel = React.createClass({\n\n  handleNextButtonClick: function (event) {\n      //Show the next question\n      nkoreaTest.Card.setState({\n            questionSerial: nkoreaTest.Card.state.questionSerial + 1,\n            answerSerial: nkoreaTest.Card.state.answerSerial + 1,\n            showAnswer: false\n          }\n      );\n\n      //Uncheck all checkboxes\n      var checkboxes = document.getElementsByClassName(\"checkbox\");\n      for (var i=0; i<checkboxes.length; i+=1) {\n          checkboxes[i].checked = false;\n      }\n      nkoreaTest.Card.state.chosenOptionTag = null;\n\n      nkoreaTest.checkboxActive = true;\n  },\n\n  render: function() {\n    return (\n        <div id=\"AnswerPanel\" data={this.props.data} key={0}>\n          <div className=\"answerBox\">\n            <div className=\"answerInnerBox\">\n              <span className=\"answerLabel\">\n                {nkoreaTest.answerLabel}\n              </span>\n              <span className=\"answerTag\">\n                {this.props.data.correctOptionTag}\n              </span>\n            </div>\n          </div>\n          <div className=\"ExplanationBox\">\n            {this.props.data.ExplanationText}\n            <button id=\"next\" onClick={this.handleNextButtonClick}> {nkoreaTest.nextButtonLabel} </button>\n          </div>\n        </div>\n    );\n  }\n});\n\nvar Card = React.createClass({\n  getInitialState: function() {\n    return {\n      questionSerial: 0,\n      answerSerial: 0,\n      showAnswer: false,\n      chosenOptionTag: null\n    };\n  },\n\n  render: function() {\n    nkoreaTest.Card = this;\n    return (\n        <div id=\"Card\" surveyData={this.props.surveyData}>\n          <Banner />\n          <QuestionPanel data={this.props.surveyData[this.state.questionSerial]}\n          />\n          {this.state.showAnswer ?\n              <AnswerPanel data={this.props.surveyData[this.state.answerSerial]}\n              /> :\n              null\n          }\n        </div>\n    );\n  }\n});\n\nvar ScorePage = React.createClass({\n  render: function() {\n    var comment = nkoreaTest.scoreComments[nkoreaTest.totalScore.toString()];\n    return (\n        <div id=\"ScorePage\">\n          <h1>你的總分是：{nkoreaTest.totalScore}</h1>\n          <p>{comment}</p>\n        </div>\n    );\n  }\n});\n\nReact.render(\n    <Card surveyData={nkoreaTest.survey} />,\n    document.getElementById('content')\n);\n"]}